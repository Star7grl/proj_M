import React, { useEffect, useState } from "react";
import ServicesApi from "../config/servicesApi";
import "../styles/Services.css";
import hotelBackground from "../assets/images/–Ω–æ–º–µ—Ä–∞.png"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

const ServicesPage = () => {
    const [services, setServices] = useState([]);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const fetchServices = async () => {
            try {
                const data = await ServicesApi.getAllServices();
                setServices(data.services || []);
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Å–ª—É–≥:", error);
            } finally {
                setLoading(false);
            }
        };
        fetchServices();
    }, []);

    if (loading) return (
        <div className="loading-animation">
            <div className="hotel-loader"></div>
            <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –ª—É—á—à–∏–µ —É—Å–ª—É–≥–∏ –¥–ª—è –≤–∞—Å...</p>
        </div>
    );

    return (
        <div className="services-page-wrapper">
            {/* –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ–º */}
            <div className="services-background">
                <img src={hotelBackground} alt="–§–æ–Ω –æ—Ç–µ–ª—è" />
                <div className="background-overlay"></div>
            </div>

            <div className="services-page">
                <div className="services-header">
                    <h2 className="services-title">–ù–∞—à–∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏</h2>
                </div>

                <div className="services-timeline">
                    {services.map((service, index) => (
                        <div
                            className={`service-card ${index % 2 === 0 ? 'left' : 'right'}`}
                            key={service.serviceId}
                        >
                            <div className="service-content">
                                {service.imageUrl && (
                                    <img src={service.imageUrl} alt={service.serviceName} />
                                )}
                                <div className="service-details">
                                    <div className="service-icon">
                                        {getServiceIcon(service.serviceName)}
                                    </div>
                                    <h3>{service.serviceName}</h3>
                                    <p className="service-description">
                                        {generateDescription(service.serviceName)}
                                    </p>
                                    <div className="service-price">
                                        {service.servicePrice} ‚ÇΩ
                                    </div>
                                    <button className="service-button">
                                        –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                                    </button>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    );
};

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∫–æ–Ω–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏
const getServiceIcon = (serviceName) => {
    const icons = {
        "SPA": "üíÜ‚Äç‚ôÄÔ∏è",
        "–†–µ—Å—Ç–æ—Ä–∞–Ω": "üçΩÔ∏è",
        "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä": "üöó",
        "–≠–∫—Å–∫—É—Ä—Å–∏—è": "üó∫Ô∏è",
        "–¢—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª": "üí™",
        "–ë–∞—Å—Å–µ–π–Ω": "üèä"
    };
    return icons[serviceName] || "‚ú®";
};

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
const generateDescription = (serviceName) => {
    const descriptions = {
        "SPA": "–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
        "–†–µ—Å—Ç–æ—Ä–∞–Ω": "–ì–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —à–µ–¥–µ–≤—Ä—ã –æ—Ç –Ω–∞—à–µ–≥–æ —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞",
        "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä": "–ö–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –≤–æ–¥–∏—Ç–µ–ª—è–º–∏",
        "–≠–∫—Å–∫—É—Ä—Å–∏—è": "–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ –º–µ—Å—Ç–Ω—ã–º –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º",
        "–§–∏—Ç–Ω–µ—Å": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
        "–ë–∞—Å—Å–µ–π–Ω": "–û–≥—Ä–æ–º–Ω—ã–π –±–∞—Å—Å–µ–π–Ω —Å –ø–æ–¥–æ–≥—Ä–µ–≤–æ–º –∏ –≤–∏–¥–æ–º –Ω–∞ –º–æ—Ä–µ"
    };
    return descriptions[serviceName] || "–ü—Ä–µ–º–∏—É–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –Ω–∞—à–∏—Ö –≥–æ—Å—Ç–µ–π";
};

export default ServicesPage;